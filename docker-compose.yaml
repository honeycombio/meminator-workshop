services:
  backend-for-frontend:
    build:
      context: services/backend-for-frontend-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      cache_from:
        - ${IMAGE_REPO_USER}/backend-for-frontend:${PROGRAMMING_LANGUAGE}-${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/backend-for-frontend:${PROGRAMMING_LANGUAGE}-${WORKSHOP_VERSION}
    ports:
      - "10115:10115"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_HEADERS
      - OTEL_SERVICE_NAME=backend-for-frontend-${PROGRAMMING_LANGUAGE}

  meminator:
    build:
      context: services/meminator-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      cache_from:
        - ${IMAGE_REPO_USER}/meminator:${PROGRAMMING_LANGUAGE}-${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/meminator:${PROGRAMMING_LANGUAGE}-${WORKSHOP_VERSION}
    ports:
      - "10116:10116"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_HEADERS
      - OTEL_SERVICE_NAME=meminator-${PROGRAMMING_LANGUAGE}

  phrase-picker:
    build:
      context: services/phrase-picker-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      cache_from:
        - ${IMAGE_REPO_USER}/phrase-picker:${PROGRAMMING_LANGUAGE}-${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/phrase-picker:${PROGRAMMING_LANGUAGE}-${WORKSHOP_VERSION}
    ports:
      - "10117:10117"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_HEADERS
      - OTEL_SERVICE_NAME=phrase-picker-${PROGRAMMING_LANGUAGE}

  image-picker:
    build:
      context: services/image-picker-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      cache_from:
        - ${IMAGE_REPO_USER}/image-picker:${PROGRAMMING_LANGUAGE}-${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/image-picker:${PROGRAMMING_LANGUAGE}-${WORKSHOP_VERSION}
    ports:
      - "10118:10118"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_HEADERS
      - OTEL_SERVICE_NAME=image-picker-${PROGRAMMING_LANGUAGE}

  web:
    build:
      context: services/web
      dockerfile: Dockerfile
      args:
        HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      cache_from:
        - ${IMAGE_REPO_USER}/web:${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/web:${WORKSHOP_VERSION}
    # volumes: # uncomment this for faster development on the frontend
    #   - ./services/web/dist:/usr/share/nginx/html # Mount directory containing static files -- only do this for development
    ports:
      - "10114:10114"
    environment:
      - HONEYCOMB_API_KEY

  user-service:
    build:
      context: .
      dockerfile: services/user-service-${PROGRAMMING_LANGUAGE}/Dockerfile
      cache_from:
        - ${IMAGE_REPO_USER}/user-service:${PROGRAMMING_LANGUAGE}-${DOCKERHUB_IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/user-service:${PROGRAMMING_LANGUAGE}-${WORKSHOP_VERSION}
    ports:
      - "10119:10119"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_HEADERS
      - OTEL_SERVICE_NAME=user-service-${PROGRAMMING_LANGUAGE}
    volumes:
      - ./services/shared-data:/app/shared-data

  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib:${COLLECTOR_VERSION}
  #   ports:
  #     - "4317:4317" # OpenTelemetry gRPC
  #     - "4318:4318" # OpenTelemetry HTTP
  #   volumes:
  #     - ./services/otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
  #   environment:
  #     - HONEYCOMB_API_KEY
